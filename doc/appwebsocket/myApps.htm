<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>innovaphone SDK - myApps Protocol</title>
    <link rel="stylesheet" href="../../web/doc/innovaphone.doc.css" type="text/css" />
    <link rel="stylesheet" href="../../web/doc/vs.css">
    <script src="../../web/doc/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
</head>

<body>
    <h1>myApps Protocol</h1>

    <p>
        The myApps protocol is the websocket protocol used by the myApps web client to talk to the PBX.
    </p>


    <u>Messages</u>
    <p>
        The following messages can be used without logging-in:
        <ul>
            <li><a href="#SubscribeRegister">SubscribeRegister</a></li>
        </ul>
    </p>
    <p>
        Login messages
        <ul>
            <li><a href="#Login">Login</a></li>
            <li><a href="#Authenticate">Authenticate</a></li>
            <li><a href="#Authorize">Authorize</a></li>
            <li><a href="#LoginResult">LoginResult</a></li>
        </ul>
    </p>
    <p>
        The following messages are only allowed after sucessfully logging-in.
        <ul>
            <li><a href="#SetSessionInfo">SetSessionInfo</a></li>
        </ul>
    </p>

    <u>Objects - recurring definitions</u>
    <ul>
        <li><a href="#Info">Info</a></li>
        <li><a href="#Session">Session</a></li>
    </ul>

    <a name="Messages"><h2>Messages</h2></a>

    <a name="BaseMessage"><div class="fnhead">Base Message</div></a>
    <p>
        The base message format consists only of the property mt.
    </p>
    <pre><code class="json">{
    "mt": string
}</code></pre><br />

    <dl>
        <dt>mt</dt>
        <dd>
            The type of the message.
        </dd>
    </dl>

    <a name="MessagesLogin"><h3>Login Messages</h3></a>

    <a name="Login"><div class="fnhead">Login</div></a>
    <p>
        Sent by the client.
    </p>
    <p>
        During the login procedure the <a href="#Login">Login</a> message is sent twice. The first time it does not include any credentials and is responded with an <a href="#Authenticate">Authenticate</a> message including a challenge.
    </p>

<pre><code class="json">{
    "mt": "Login",
    "type": string,
    "userAgent": string
}</code></pre>

    <p>
        The second time it is sent with the actual login data that includes a user name and a response in the form of a digest.
    </p>

<pre><code class="json">{
    "mt": "Login",
    "type": string,
    "method": string,
    "username": string,
    "nonce": string,
    "response": string,
    "userAgent": string
}</code></pre>

    <p>
        If the authentication was successful the PBX will respond with <a href="#LoginResult">LoginResult</a>.
        If two-factor authentication is enables the PBX will first send an <a href="#Authorize">Authorize</a> and wait with the <a href="#LoginResult">LoginResult</a> until the session
        has been authorized over a second channel.
    </p>

    <dl>
        <dt>type</dt>
        <dd>
            "user" for login with user credentials. This will create a persistent session that can be resumed for subsequent logins.
        </dd>
        <dd>
            "session" for login with session credentials that were created during a previous login with user credentials.
        </dd>

        <dt>method</dt>
        <dd>"digest" or "ntlm".</dd>
        <dd>Must be the same method as requested in the <a href="#Authenticate">Authenticate</a> message.</dd>

        <dt>username</dt>
        <dd>The SIP URI of the user for type "user".</dd>
        <dd>The session ID for type "session".</dd>

        <dt>nonce</dt>
        <dd>A 16-byte hexstring, encoding 8 random bytes chosen by the client software.</dd>
        <dd>Nonces must be unique and should not be re-used for subsequent connections.</dd>

        <dt>response</dt>
        <dd>A digest calculated to verify the knowledge of the shared secret that can be either the user password or the session password, depending on the login type.</dd>
        <dd>
            For type "digest"
        </dd>
        <dd>
            <pre>Hexstring(SHA256(innovaphoneAppClient:&lt;type&gt;:&lt;domain&gt;:&lt;username&gt;:&lt;password&gt;:&lt;nonce&gt;:&lt;challenge&gt;))</pre>
        </dd>
        <dd>
            For type "ntlm"
        </dd>
        <dd>
            <pre>Hexstring(NtlmResponse(&lt;username&gt;,&lt;password&gt))</pre>
        </dd>

        <dt>userAgent</dt>
        <dd>A string describing the used software for this connection, like "myApps (Windows)".</dd>
    </dl>


    <a name="LoginResult"><div class="fnhead">LoginResult</div></a>
    <p>
        Sent by the PBX as a response to the <a href="#Login">Login</a> message.
    </p> 
    <p>
        The message indicates that the login was successful and includes additional information for the client.
    </p>
<pre><code class="json">{
    "mt": "LoginResult",
    "info": <a href="#Info">Info</a>,
    "digest": string
}</code></pre>
   
    <dl>
        <dt>info</dt>
        <dd>
            A Json Object with additional information. For the digest calculation this must be json
            encoded without any unnecessary white space and no unnecessary escaping. This is the
            encoding done by the json_io library of the SDK, by the Javascript JSON.stringify function
            or by PHP json_encode($input, JSON_UNESCAPED_UNICODE)
        </dd>

        <dt>digest</dt>
        <dd>
            A digest calculated to verify the knowledge of the shared secret that can be either the user password or the session password, depending on the login type.
            It also protects the integrity of the included info structure.
        </dd>
        <dd>
            <pre>Hexstring(SHA256(innovaphoneAppClient:loginresult:&lt;domain&gt;:&lt;username&gt;:&lt;password&gt;:&lt;nonce&gt;:&lt;challenge&gt;:&lt;info&gt;))</pre>
        </dd>
    </dl>


    <a name="Objects"><h2>Objects</h2></a>

    <a name="Info"><div class="fnhead">Info</div></a>
    <pre><code class="json">{
    "domain": string,
    "sip": string,
    "guid": string,
    "dn": string,
    "num": string,
    "email": string,
    "session": <a href="#Session">Session</a>
}</code></pre>
    <p>
        The info object is generated by the PBX when a user logs in.
        It contains more information about the user and optinal information about the session that has been created during the login.
    </p>
    <dl>
        <dt>domain</dt>
        <dd>
            The domain name of the user.
        </dd>
        <dt>sip</dt>
        <dd>
            The SIP URI of the user.
        </dd>
        <dt>guid</dt>
        <dd>
            The GUID of the user object.
        </dd>
        <dt>dn</dt>
        <dd>
            The display name of the user object.
        </dd>
        <dt>num</dt>
        <dd>
            The phone number of the user object.
        </dd>
        <dt>email</dt>
        <dd>
            The email address of the user object.
        </dd>
        <dt>session</dt>
        <dd>
            A <a href="#Session">Session</a> object containing session credentials.
        </dd>
    </dl>


    <a name="Session"><div class="fnhead">Session</div></a>
    <pre><code class="json">{
    "usr": string,
    "pwd": string
}</code></pre>
    <p>
        During logins of type "user" a persistent session is created. This structure contains the encrypted credentials of this session.
        They are used for encrypting selected attributes of messages. Also they are used for subsequent logins of type "session". 
    </p>
    <dl>
        <dt>usr</dt>
        <dd>
            The encrypted session username.
        </dd>
        <dd>
            <pre>Hexstring(RC4(innovaphoneAppClient:usr:&lt;nonce&gt;:&lt;password&gt;, &lt;session-username&gt;))</pre>
        </dd>
        <dt>pwd</dt>
        <dd>
            The encrypted session password.
        </dd>
        <dd>
            <pre>Hexstring(RC4(innovaphoneAppClient:pwd:&lt;nonce&gt;:&lt;password&gt;, &lt;session-password&gt;))</pre>
        </dd>
    </dl>


</body>
</html>
